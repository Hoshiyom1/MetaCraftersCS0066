// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {
    string public name;
    string public symbol;
    uint256 public totalSupply;

    mapping(address => uint256) public balances;

    constructor(string memory _name, string memory _symbol, uint256 _initialSupply) {
        name = _name;
        symbol = _symbol;
        totalSupply = _initialSupply;
        balances[msg.sender] = _initialSupply;
    }

    function mint(address account, uint256 value) public {
        require(msg.sender == account, "You can only mint tokens for your own account");
        totalSupply += value;
        balances[account] += value;
    }

    function burn(address account, uint256 value) public {
        require(balances[account] >= value, "Insufficient balance to burn");
        require(msg.sender == account, "You can only burn tokens from your own account");
        totalSupply -= value;
        balances[account] -= value;
    }
}
